# Estos reglajes sobrescriben los parametros de arranque
# No todas las opciones se pueden recargar sobre la marcha
# que serian las siguientes:
#
#    main/scheduler (modo programado)
#    main/port (puerto principal)
#    backdoor/port (puerto secundario consola)

[main]
# puerto principal para mineros
port = 8337

# Modo programado
scheduler = DefaultScheduler
#scheduler = SimpleSliceScheduler
#scheduler = AltSliceScheduler

# Modo de respaldo
backup_type = rejectrate
# Modos disponibles:
# latehop    = elije la mina de respaldo con los shares mas altos
# earlyhop   = el opuesto del modo anterior
# rejectrate = selection el mejor respaldo basandose en shares denegados
# slice      = trocea shares entre las minas de respaldo

# Ganancia minima cuando se trabaja con varias monedas
min_coin_proff = 1.0

# Indica si el programa minara las monedas mas provechosas o si se mina unicamente en base a la cantidad de shares de cada pool.
calculate_profit = False

# Tiempo de muestra trabajadores parados en pagina de stats
user_drop_time = 3600

# Tiempo de espera para las peticiones de trabajo
work_request_timeout = 2.5

# Tiempo de espera para comprobar conectividad con mina
delag_sleep = 20

# Tiempo en segundos para refrescar stats de mina
pool_refreshlimit = 120

# Limite de mineria en cada mina
threshold = 0.435

# Segundos que hay que esperar para desactivar API de mina si los stats no se actualizan (7200 == 2 horas)
api_disable_sec = 7200

# Identificacion de navegador bH
work_user_agent = Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)

# si esta puesto en 'True', bH coge aleatoriamente identificaciones al arrancar o recargar la configuracion
use_random_ua = True

# lista de identificaciones delimitadas por '|'
random_ua_list = Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)|Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)|Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)|Mozilla/5.0 (Windows NT 5.0; WOW64; rv:6.0) Gecko/20100101 Firefox/6.0|Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0|Mozilla/5.0 (Windows; U; Windows NT 5.2; en-GB; rv:1.9.2.9) Gecko/20100824 Firefox/3.6.9|Opera/9.80 (Windows NT 6.1; U; es-ES) Presto/2.9.181 Version/12.00|Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1

#[auth]
# nombre ususario/contrasena opcionales
#username = user
#password = pass

[SimpleSliceScheduler]
slicesize = 30

[AltSliceScheduler]
# Tamano entero de seccion de donde se repartiran los trozos
slicesize = 600

# Tamano minimo de trozo
min_slicesize = 60

# Valor aleatorio que se añade o resta de un trozo
slice_jitter = 0

# Activa el calculo de trozos tomando en cuenta tambien el tiempo de ronda en una mina (tiempo menor = mayor tamaño de trozo)
roundtimebias = False

# Basa el calculo anterior en la media de tiempo que necesita una mina de 1000 mhash/s para completar un bloque
roundtimetarget = 1000

# Incrementa para favorecer mas hacia tiempo de ronda
# (valor por defecto es 10)
roundtimemagic = 10

[pluginmode]
# Modos de carga para modulos extra: 
#    auto - carga automatica de modulos
#    manual - especifica que modulos se van a cargar
#    disabled - desactiva la carga de modulos extra
mode = manual

[plugins]
test = False
backdoor = False
apiangel = True
poclbm = False
lpbot = False
payouts = False
lpdump = False

# ajusta "rpcworklog" a False para desactivar el registro de peticiones RPC
rpcworklog = True

# ajusta como True para activar el panel de control LP
# podras ver LP de mina ganadora, proprietario comprobado,
# temporizadores de bloque y sumario de penalidad LP
# Necesita "blockaccuracy" = True para verificar la informacion sobre bloques
lpworkbench = False

# memoriza lista de bloques comprobados de cada mina (via API/html)
# mira el "poolblock.cfg" para mas informacion
poolblocks = False

# ajusta como True para monitorear la precision de los senales LP
# se requiere "poolblocks = True"
blockaccuracy = False

[backdoor]
port = 3000

[plugin.apiangel]
# APIAngel vigila sobre las minas con api deshabilitada y la vuelve activar
#  - Comprueba cada invervalo en segundos
#  - Rehabilita si "last_pulled" + "reincarnateInterval" > ahora (tiempo actual en segundos)
interval = 60
reincarnateInterval = 3600

[plugin.payouts]
interval = 600
rpcuser = cut
rpcpass = 123456
rpchost = localhost
rpcport = 8332

[lpbot]
irc_server = irc.bithopper.org
irc_port = 6667
irc_channel = #bithopper-lp
run_interval = 15
# min votes before votes are considered
min_votes = 5
# (0.5 == 50% of votes for a quorum) probably not a good idea to set below 0.5
vote_threshold = 0.5

[plugin.poolblocks]
# tiempo de espera para comprobar las minas sobre bloques nuevos
refreshInterval = 600

# tope de intervalo para numeros cuyo valor que se añaden al tiempo de busqueda bloques nuevos (desde 0 a refreshRandomJitter)
refreshRandomJitter = 120

# numero de hilos paralelos abiertos con blockexplorer
execpoolsize = 8

# use_ratelimit = True - activa el limite de velocidad para la recogida de informacioon sobre bloques
use_ratelimit = True

# limita velocidad (kb/s) para la recogida de info sobre bloques (exepto mmf/btcmp)
# utiliza un valor cerca de 80% del limite deseado, ej. para 100kb/s prueba 80kb/s,
# especialmente para velocidades pequenas
ratelimit = 50

# limita el numero de bloques buscados (por defecto 25 bloques)
block_retrieve_limit = 25

# tiempo de espera para la busqueda de bloques en las paginas de mina (por defecto 30 segundos)
timeout = 30

[plugins.blockaccuracy]
# intervalo de informes sobre bloque nuevo verificado (por defecto 600 segundos)
reportInterval = 600

[plugins.lpdump]
# guarda en un archivo los resultados LP que se ven en "lpworkbench"
file=lpdump.out
